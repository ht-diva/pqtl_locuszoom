# import required libraries
from snakemake.utils import min_version

##### set minimum snakemake version #####
min_version("8.4.1")

# read the configuration file
configfile: "conf/config.yaml"

include: "rules/common.smk"

rule all:
    input: expand("results/ld_reshaped/{seqid}.sentinel", seqid = lb.phenotype_id),


rule compute_ld:
    input:
        loci="/scratch/dariush.ghasemi/projects/pqtl_pipeline_finemap/results/seq.4407.10/break/{seqid}_loci.csv",
    output:
        ofile = "results/ld/{seqid}",
        sentinel = "results/ld/{seqid}.sentinel"
    params:
        #loci = get_locus,
        bfile = config["genotype"],
    resources:
        runtime=lambda wc, attempt: 120 + attempt * 60,
    shell:
        """
    loci_list={input.loci};
    
    while IFS=, read -r col1 col2 col3 col4 col5 col6_onwards; do
        chr=$col1
        beg=$col2
        end=$col3
        snp=$col5
        loc=${{col1}}_${{col2}}_${{col3}}

        if [[ "$chr" != "chr" ]]; then
        
            echo "Coordinates: ${{loc}}"
        
            plink   \
            --bfile  {params.bfile}"$chr"  \
            --keep-allele-order \
            --ld-snp "$snp" \
            --chr "$chr" --from-bp "$beg" --to-bp "$end" \
            --r2  \
            --ld-window 99999  \
            --ld-window-r2 0  \
            --out {output.ofile}_chr"$loc"  \
            --threads 8  \
            --memory 16000

            echo "====================================================================="
        fi
    
    done < "$loci_list"
    touch {output.sentinel}
"""


rule reshape_ld:
    input:
        loci="/scratch/dariush.ghasemi/projects/pqtl_pipeline_finemap/results/seq.4407.10/break/{seqid}_loci.csv",
        ld="results/ld/{seqid}",
    output:
        ofile = "results/ld_reshaped/{seqid}",
        sentinel= "results/ld_reshaped/{seqid}.sentinel"
    resources:
        runtime=lambda wc, attempt: 120 + attempt * 60,
    shell:
        """
    loci_list={input.loci};
    ifile=$(echo {input.loci})
    ofile=$(echo {output.ofile})

    while IFS=, read -r col1 col2 col3 col4_onwards; do

        chr=$col1
        loc=${{col1}}_${{col2}}_${{col3}}
        ld_messi=${{ifile}}_chr${{loc}}.ld
        ld_tidy="${{ofile}}"_chr${{loc}}.ld

        if [[ "$chr" != "chr" ]]; then
        
            echo "Coordinates: ${{loc}}"
            echo "file name is: ${{ld_messi}}"
            
            # Here reshapes plink LD file to the desired structure by LZ (https://genome.sph.umich.edu/wiki/LocusZoom_Standalone#User-supplied_LD)
            # L1. input file is the output of plink1 for a 1-to-all combinations of the SNPs within a region
            # L2. awk remove spaces from the input file and make it tab-separated
            # L3. awk reordering 4 required columns of LD file for LZ; rsquare was duplicated to replace with dprime -> Snakemake cannot interpret square bracet; it confilcts with internal SMK variable.
            # L4. sed -e changing headers to snp1 (aby snp in the region), snp2 (reference snp), D` and R2 (LD measures)
            # L5. sed -E converting SNP id from chr:pos:ref:alt to  chr:pos_ref/alt to allow merge with annotation in LZ sqlite database

            cat ${{ld_messi}} | \                                 
                awk -v OFS="\t" '$1=$1' | \
                awk '{{print $6"\t"$3"\t"$7"\t"$7}}' OFS="\t" | \                  
                sed -e '1s/SNP_B/snp1/' -e '1s/SNP_A/snp2/' -e '1s/R2/dprime/' -e '1s/R2/rsquare/'  | \ 
                sed -E 's/([0-9]+:[0-9]+):([A-Z]+):([A-Z]+)/\1_\2\/\3/g' > ${{ld_tidy}}
            
            echo "====================================================================="
        fi

    done < "$loci_list"
    touch {output.sentinel}
        """
